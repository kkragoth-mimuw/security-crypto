import binascii
import base64
from gmpy import root, gcdext, invert, is_square, is_prime
from Crypto.Hash import SHA256

hashes = [
 	'73172cf83fcc7e4389fc5114b396861fd5a98a6bed83a1b4e3e40205963b5cfe',
	'9b31e9e050550886f56ee4599b917ef3d5dd5e7045e7183db5efad80dfea6501',
	'140b1b2dc30b9b6287d533469d761bacc2c72117ec73e24d7ff510e70c70f497',
	'192dcb849bd3dd02798a1a456ec9e9f49fe6c37cb7813ed4b866967fd7a450f2',
	'cf057e560b7ae068e0d140dc4f0371961f013a2d45dd18a7b5e9119c7a7d0cfa',
	'cfd3e3107d3cb7f14309fdc9c561530bf4ca2a34a52bc009b0a653747022c5dc',
	'c75d8a129752cf44b65e83ea62c745a14c5f423f68b20cf69906b1fe28db8e59',
	'efbb7c68af68f70b356c536aef44f21a924cd7203f817a9eddf34ef99ed25ae3',
	'e60259d1d7f9bada51422ef2747969ed9890d8f03b7ad4d09beb203276f611db',
	'67e1e528c4fe7247ca76f619a955d082fbb976ea434a21fbbfc8ed7344e9eb6c',
	'83411ac41509efdc1f65b0d3710f94ddb2ddd74cfba40adcd1c13bf24bdc74f4',
	'fe2888edbf21030d14039661fbe008e34a866f31a2d9e25ff60404c4177de4e6',
	'c9f80a67ce329a77484884089ec0d73e24f9ab84c4450ff9a3c562c0c37e4870',
	'd5e7cf26fcd915c54bb4c0bb6dc501809cd4b7971d880f7b9be7f627d4227c42',
	'0aa0c9f087ebed5698e55c7c4b2c4aee2cbd4384a46f3e4ec8e74d90fef24a56',
	'b0c5eb20f3e494386d8726dc3aef7c9c976b9ccf08abe6749ae059ee4c62c04b',
	'd3c2ee6a66b3ddabce1a97f6047460c65cdeb0b317b4a82f3520efc9ba5b6808',
	'2382ffc8b81ad49bfda24e8f9f585269a4357cb04dd41c48dca620dae4413a83',
	'157de3e6fae81f79b91bb7d9889782d31211c1be8715a8a4820ebc813821ff74',
	'95119940cdc526fb50b648636b0acb176e289f329f022c4612a12fa8a831b081',
	'8a073945c339990f80402047d0c23cfcad8174f1cc9d8c8a9e7ebf6549014cef'
 ]

N = '00:a4:3f:ea:ef:09:8e:e2:88:8d:4f:29:ad:c4:0c:\
    5b:44:43:e6:07:dd:5d:28:9c:3c:55:03:3e:ae:c0:\
    bc:f3:8d:57:0c:a7:eb:86:fd:85:df:ca:b8:95:11:\
    cc:86:d7:20:2a:00:4c:f7:c0:ec:83:4b:68:34:51:\
    ce:a0:73:8d:67:af:a7:74:8c:b6:f4:db:27:45:49:\
    90:ae:c2:0a:7b:5d:61:41:72:4c:48:0f:39:50:a6:\
    ee:a9:60:0c:be:fa:9f:73:14:39:a4:e5:ce:43:ea:\
    1a:c6:b3:8e:5b:90:14:42:66:cb:b5:da:db:24:fd:\
    0e:78:68:d5:df:d0:50:27:68:e1:fe:b1:b1:01:47:\
    af:ba:71:38:13:31:8d:0f:93:32:72:8b:3f:ec:f8:\
    85:77:8e:5b:8c:60:39:50:96:97:18:c3:2e:20:ad:\
    ac:30:01:2b:b3:4b:6b:2d:ce:30:99:a8:cb:16:03:\
    aa:b8:39:90:a1:3a:f4:e4:e5:6f:66:5a:68:55:f6:\
    1f:d3:59:b0:06:cb:b5:52:9c:57:44:bb:fd:45:51:\
    09:9e:10:04:36:ca:7a:f8:d1:c9:fe:99:e6:dd:04:\
    56:e9:3c:7f:c9:f9:3e:2a:81:25:be:40:3f:f8:8f:\
    31:02:51:e2:c7:53:60:a2:85:63:06:77:4d:9f:c4:\
    c9:71'

N = N.replace(':', '').replace(' ','')

c1 = '6b366b45784b5a617677474b7462537958484e367a4a786732734b634b4c4f59593955684b74596e504571656b4c74327a46744763624978646272596a76314d6e2b6a3470626355377a49435661346232726154377a734d37525770434151523365784b537649656a41624937445269634266327938457532506f72513445724132696b67366c766a30356a4e744a574c56437168345739672b35685552616e4a74396c4878713530542f64534f486a47616c785363635969526f695957644644586a4630734f4f5434716b57664c6a4659776955353473314a376d743151377a487a645758724670796856396345472f58427066693462566555453671414c30782f4f756d7a61453854474f59387161617267752b714d6c576e474678707a585333786a7a434755315a39516735327464345a643450496b752f2f6c3450523961695778435a4c332f647a2f2b4f62587a2f3252413d3d'
c2 = '6c39514c37775a4c796e53474534537730673278625951333968346f7731302f5a76526d3645526d62436c5a7353426e643755733736655864616a55644e756c617439386b5973677372384d557a767a6772487453583562572f6337663970654c5759626546452b762f754a596a35566d426478447a4c3174722b456867615264336167657963302f61554f34563333376c4c37523136476f342b2f2f67587558596f482b4574384e38427a575279796c6a64493041517a4c495a436a5155595a6e2f37356b754b795971394d7378564b707532415a64414f457752666e326a622f44453767593244524a726b62756a346a4b505a4442394c44337057712b686a6168667a70542b68492b614f41686d6f44623853734b33446856314e6751436d3858336c4359533631545850305370554d5575764b492b5959342b4d6f743645776a30534a56476a5839506b70744f4771694a41773d3d'

print binascii.hexlify(SHA256.new(binascii.unhexlify(c1)).digest())
print binascii.hexlify(SHA256.new(binascii.unhexlify(c2)).digest())

n =  int(N, 16)

c1 = int(c1, 16)
c2 = int(c2, 16)

diff = 1;

e = 3


def franklin_reiter_related_message_attack(e, n, c1, c2, a, b):
    assert e == 3 and b != 0
    frac = b * (c2 + 2*pow(a,3)*c1 - pow(b,3))
    denom = a * (c2 - pow(a,3)*c1 + 2*pow(b,3))
    m = (frac * invert(denom, n)) % n
    return m

m = franklin_reiter_related_message_attack(e, n, c1, c2, 1, 1)

key = base64.b64encode(str(m))
print key